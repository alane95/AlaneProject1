create html (done)
create css (done)
create js(done)
is your game playable? -- does your game meet the mvp requirements
is your game winnable? -- does your game have win condition logic that works
is the result of the win condition/score displayed to the user?
does your game have a reset button? -- the reset button should return your game to the inital state
does your game have clear instructions on how to play? -- a user who has never played your game before needs to be able to understand how to play
is your game well documented in your readme.md?
did you use a good git workflow by commiting your work frequently and at appropriate times during the project?
is your js well organized?
did you use a good coding style with DRY principles?
is there effort put into styling your game?


Create one square on your page. Write JavaScript code that will make an X appear in the square when the square is clicked.
- Commit your code and push to GitHub( done)
Create another square above the first square.
Write JavaScript code that will make an X appear in the lower square when the lower square is clicked, but will not allow an X to appear in the upper square until an X first appears in the lower square after clicking on the lower square. If that condition is satisfied, the upper square will display an X when clicked.
- Commit your code and push to GitHub(done)
Continue writing JavaScript according to this approach until your stack of squares is eight squares high. In other words, a square will not display an X when clicked unless the square immediately below it already is displaying an X.
- Commit your code and push to GitHub
Write JavaScript code that will log "4 adjoining X's" to the console when four squares contain X's.
- Commit your code and push to GitHub.
Write JavaScript code that will alternate between placing an X and an O in the stack of eight squares when an individual square is clicked.
- Commit your code and push to GitHub
Create a second column of squares that is eight squares high. Write code that will follow the same rules as above where a square will not display an X or an O unless the square below it contains an X or an O.
- Commit your code and push to GitHub.
Write JavaScript code that will log "4 adjoining X's" to the console when four adjacent squares contain X's. Write JavaScript code that will log "4 adjoining O's" to the console when four adjacent squares contain O's.
- Commit your code and push to GitHub.
When you get to this point, ask an instructor to review your code and to get approval to continue building your Connect 4 game.